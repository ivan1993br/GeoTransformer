#!/user/bin/env python

import argparse
import numpy as np
import os

from plyfile import PlyData, PlyElement

class PlyIO:
    def read_data(self,ply_path):
        self.plydata = PlyData.read(ply_path)
    
    def convert_ply_to_npy(self):
        n_3_array = np.column_stack((self.plydata['vertex']['x'],
                                     self.plydata['vertex']['y'],
                                     self.plydata['vertex']['z']))
        return n_3_array


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('--ply_path', default=None, type=str, help='Ply path to be read', required=True)
    parser.add_argument('--output_path', default=os.getcwd(), type=str, help='Ply path to be read')
    parser.add_argument('--fileout_name', default="output", type=str, help='File output name')
    args = parser.parse_args()
    ply_file = PlyIO()
    ply_file.read_data(args.ply_path)
    np_array = ply_file.convert_ply_to_npy()
    np.save(args.output_path + "/"+ args.fileout_name + ".npy", np_array)

    default_transform = np.array([[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]])
    np.save(args.output_path + "/"+ "default_transform" + ".npy", default_transform)



if __name__ == '__main__':
    main()